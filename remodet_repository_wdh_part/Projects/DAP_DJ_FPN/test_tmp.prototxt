input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 288
  dim: 512
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BatchNorm"
  bottom: "conv1"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv1_scale"
  type: "Scale"
  bottom: "conv1"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv1_relu"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv2_bn"
  type: "BatchNorm"
  bottom: "conv2"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv2_scale"
  type: "Scale"
  bottom: "conv2"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv2_relu"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv3_bn"
  type: "BatchNorm"
  bottom: "conv3"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv3_scale"
  type: "Scale"
  bottom: "conv3"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv3_relu"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 0
  }
}
layer {
  name: "conv4_1/incep/1x1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1/incep/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_1/incep/1x1_bn"
  type: "BatchNorm"
  bottom: "conv4_1/incep/1x1"
  top: "conv4_1/incep/1x1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_1/incep/1x1_scale"
  type: "Scale"
  bottom: "conv4_1/incep/1x1"
  top: "conv4_1/incep/1x1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_1/incep/1x1_relu"
  type: "ReLU"
  bottom: "conv4_1/incep/1x1"
  top: "conv4_1/incep/1x1"
}
layer {
  name: "conv4_1/incep/1_reduce"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1/incep/1_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 24
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_1/incep/1_reduce_bn"
  type: "BatchNorm"
  bottom: "conv4_1/incep/1_reduce"
  top: "conv4_1/incep/1_reduce"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_1/incep/1_reduce_scale"
  type: "Scale"
  bottom: "conv4_1/incep/1_reduce"
  top: "conv4_1/incep/1_reduce"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_1/incep/1_reduce_relu"
  type: "ReLU"
  bottom: "conv4_1/incep/1_reduce"
  top: "conv4_1/incep/1_reduce"
}
layer {
  name: "conv4_1/incep/3x3"
  type: "Convolution"
  bottom: "conv4_1/incep/1_reduce"
  top: "conv4_1/incep/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_1/incep/3x3_bn"
  type: "BatchNorm"
  bottom: "conv4_1/incep/3x3"
  top: "conv4_1/incep/3x3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_1/incep/3x3_scale"
  type: "Scale"
  bottom: "conv4_1/incep/3x3"
  top: "conv4_1/incep/3x3"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_1/incep/3x3_relu"
  type: "ReLU"
  bottom: "conv4_1/incep/3x3"
  top: "conv4_1/incep/3x3"
}
layer {
  name: "conv4_1/incep/2_reduce"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1/incep/2_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 24
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_1/incep/2_reduce_bn"
  type: "BatchNorm"
  bottom: "conv4_1/incep/2_reduce"
  top: "conv4_1/incep/2_reduce"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_1/incep/2_reduce_scale"
  type: "Scale"
  bottom: "conv4_1/incep/2_reduce"
  top: "conv4_1/incep/2_reduce"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_1/incep/2_reduce_relu"
  type: "ReLU"
  bottom: "conv4_1/incep/2_reduce"
  top: "conv4_1/incep/2_reduce"
}
layer {
  name: "conv4_1/incep/5x5"
  type: "Convolution"
  bottom: "conv4_1/incep/2_reduce"
  top: "conv4_1/incep/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 2
    kernel_size: 5
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_1/incep/5x5_bn"
  type: "BatchNorm"
  bottom: "conv4_1/incep/5x5"
  top: "conv4_1/incep/5x5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_1/incep/5x5_scale"
  type: "Scale"
  bottom: "conv4_1/incep/5x5"
  top: "conv4_1/incep/5x5"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_1/incep/5x5_relu"
  type: "ReLU"
  bottom: "conv4_1/incep/5x5"
  top: "conv4_1/incep/5x5"
}
layer {
  name: "conv4_1/incep/pool"
  type: "Pooling"
  bottom: "pool3"
  top: "conv4_1/incep/pool"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "conv4_1/incep/pool_1x1"
  type: "Convolution"
  bottom: "conv4_1/incep/pool"
  top: "conv4_1/incep/pool_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_1/incep/pool_1x1_bn"
  type: "BatchNorm"
  bottom: "conv4_1/incep/pool_1x1"
  top: "conv4_1/incep/pool_1x1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_1/incep/pool_1x1_scale"
  type: "Scale"
  bottom: "conv4_1/incep/pool_1x1"
  top: "conv4_1/incep/pool_1x1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_1/incep/pool_1x1_relu"
  type: "ReLU"
  bottom: "conv4_1/incep/pool_1x1"
  top: "conv4_1/incep/pool_1x1"
}
layer {
  name: "conv4_1/incep"
  type: "Concat"
  bottom: "conv4_1/incep/1x1"
  bottom: "conv4_1/incep/3x3"
  bottom: "conv4_1/incep/5x5"
  bottom: "conv4_1/incep/pool_1x1"
  top: "conv4_1/incep"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv4_2/incep/1x1"
  type: "Convolution"
  bottom: "conv4_1/incep"
  top: "conv4_2/incep/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_2/incep/1x1_bn"
  type: "BatchNorm"
  bottom: "conv4_2/incep/1x1"
  top: "conv4_2/incep/1x1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_2/incep/1x1_scale"
  type: "Scale"
  bottom: "conv4_2/incep/1x1"
  top: "conv4_2/incep/1x1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_2/incep/1x1_relu"
  type: "ReLU"
  bottom: "conv4_2/incep/1x1"
  top: "conv4_2/incep/1x1"
}
layer {
  name: "conv4_2/incep/1_reduce"
  type: "Convolution"
  bottom: "conv4_1/incep"
  top: "conv4_2/incep/1_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 24
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_2/incep/1_reduce_bn"
  type: "BatchNorm"
  bottom: "conv4_2/incep/1_reduce"
  top: "conv4_2/incep/1_reduce"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_2/incep/1_reduce_scale"
  type: "Scale"
  bottom: "conv4_2/incep/1_reduce"
  top: "conv4_2/incep/1_reduce"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_2/incep/1_reduce_relu"
  type: "ReLU"
  bottom: "conv4_2/incep/1_reduce"
  top: "conv4_2/incep/1_reduce"
}
layer {
  name: "conv4_2/incep/3x3"
  type: "Convolution"
  bottom: "conv4_2/incep/1_reduce"
  top: "conv4_2/incep/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_2/incep/3x3_bn"
  type: "BatchNorm"
  bottom: "conv4_2/incep/3x3"
  top: "conv4_2/incep/3x3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_2/incep/3x3_scale"
  type: "Scale"
  bottom: "conv4_2/incep/3x3"
  top: "conv4_2/incep/3x3"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_2/incep/3x3_relu"
  type: "ReLU"
  bottom: "conv4_2/incep/3x3"
  top: "conv4_2/incep/3x3"
}
layer {
  name: "conv4_2/incep/2_reduce"
  type: "Convolution"
  bottom: "conv4_1/incep"
  top: "conv4_2/incep/2_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 24
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_2/incep/2_reduce_bn"
  type: "BatchNorm"
  bottom: "conv4_2/incep/2_reduce"
  top: "conv4_2/incep/2_reduce"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_2/incep/2_reduce_scale"
  type: "Scale"
  bottom: "conv4_2/incep/2_reduce"
  top: "conv4_2/incep/2_reduce"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_2/incep/2_reduce_relu"
  type: "ReLU"
  bottom: "conv4_2/incep/2_reduce"
  top: "conv4_2/incep/2_reduce"
}
layer {
  name: "conv4_2/incep/5x5"
  type: "Convolution"
  bottom: "conv4_2/incep/2_reduce"
  top: "conv4_2/incep/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 2
    kernel_size: 5
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_2/incep/5x5_bn"
  type: "BatchNorm"
  bottom: "conv4_2/incep/5x5"
  top: "conv4_2/incep/5x5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_2/incep/5x5_scale"
  type: "Scale"
  bottom: "conv4_2/incep/5x5"
  top: "conv4_2/incep/5x5"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_2/incep/5x5_relu"
  type: "ReLU"
  bottom: "conv4_2/incep/5x5"
  top: "conv4_2/incep/5x5"
}
layer {
  name: "conv4_2/incep/pool"
  type: "Pooling"
  bottom: "conv4_1/incep"
  top: "conv4_2/incep/pool"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "conv4_2/incep/pool_1x1"
  type: "Convolution"
  bottom: "conv4_2/incep/pool"
  top: "conv4_2/incep/pool_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_2/incep/pool_1x1_bn"
  type: "BatchNorm"
  bottom: "conv4_2/incep/pool_1x1"
  top: "conv4_2/incep/pool_1x1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_2/incep/pool_1x1_scale"
  type: "Scale"
  bottom: "conv4_2/incep/pool_1x1"
  top: "conv4_2/incep/pool_1x1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_2/incep/pool_1x1_relu"
  type: "ReLU"
  bottom: "conv4_2/incep/pool_1x1"
  top: "conv4_2/incep/pool_1x1"
}
layer {
  name: "conv4_2/incep"
  type: "Concat"
  bottom: "conv4_2/incep/1x1"
  bottom: "conv4_2/incep/3x3"
  bottom: "conv4_2/incep/5x5"
  bottom: "conv4_2/incep/pool_1x1"
  top: "conv4_2/incep"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv4_3/incep/1x1"
  type: "Convolution"
  bottom: "conv4_2/incep"
  top: "conv4_3/incep/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_3/incep/1x1_bn"
  type: "BatchNorm"
  bottom: "conv4_3/incep/1x1"
  top: "conv4_3/incep/1x1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_3/incep/1x1_scale"
  type: "Scale"
  bottom: "conv4_3/incep/1x1"
  top: "conv4_3/incep/1x1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_3/incep/1x1_relu"
  type: "ReLU"
  bottom: "conv4_3/incep/1x1"
  top: "conv4_3/incep/1x1"
}
layer {
  name: "conv4_3/incep/1_reduce"
  type: "Convolution"
  bottom: "conv4_2/incep"
  top: "conv4_3/incep/1_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 24
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_3/incep/1_reduce_bn"
  type: "BatchNorm"
  bottom: "conv4_3/incep/1_reduce"
  top: "conv4_3/incep/1_reduce"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_3/incep/1_reduce_scale"
  type: "Scale"
  bottom: "conv4_3/incep/1_reduce"
  top: "conv4_3/incep/1_reduce"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_3/incep/1_reduce_relu"
  type: "ReLU"
  bottom: "conv4_3/incep/1_reduce"
  top: "conv4_3/incep/1_reduce"
}
layer {
  name: "conv4_3/incep/3x3"
  type: "Convolution"
  bottom: "conv4_3/incep/1_reduce"
  top: "conv4_3/incep/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_3/incep/3x3_bn"
  type: "BatchNorm"
  bottom: "conv4_3/incep/3x3"
  top: "conv4_3/incep/3x3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_3/incep/3x3_scale"
  type: "Scale"
  bottom: "conv4_3/incep/3x3"
  top: "conv4_3/incep/3x3"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_3/incep/3x3_relu"
  type: "ReLU"
  bottom: "conv4_3/incep/3x3"
  top: "conv4_3/incep/3x3"
}
layer {
  name: "conv4_3/incep/2_reduce"
  type: "Convolution"
  bottom: "conv4_2/incep"
  top: "conv4_3/incep/2_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 24
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_3/incep/2_reduce_bn"
  type: "BatchNorm"
  bottom: "conv4_3/incep/2_reduce"
  top: "conv4_3/incep/2_reduce"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_3/incep/2_reduce_scale"
  type: "Scale"
  bottom: "conv4_3/incep/2_reduce"
  top: "conv4_3/incep/2_reduce"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_3/incep/2_reduce_relu"
  type: "ReLU"
  bottom: "conv4_3/incep/2_reduce"
  top: "conv4_3/incep/2_reduce"
}
layer {
  name: "conv4_3/incep/5x5"
  type: "Convolution"
  bottom: "conv4_3/incep/2_reduce"
  top: "conv4_3/incep/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 2
    kernel_size: 5
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_3/incep/5x5_bn"
  type: "BatchNorm"
  bottom: "conv4_3/incep/5x5"
  top: "conv4_3/incep/5x5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_3/incep/5x5_scale"
  type: "Scale"
  bottom: "conv4_3/incep/5x5"
  top: "conv4_3/incep/5x5"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_3/incep/5x5_relu"
  type: "ReLU"
  bottom: "conv4_3/incep/5x5"
  top: "conv4_3/incep/5x5"
}
layer {
  name: "conv4_3/incep/pool"
  type: "Pooling"
  bottom: "conv4_2/incep"
  top: "conv4_3/incep/pool"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "conv4_3/incep/pool_1x1"
  type: "Convolution"
  bottom: "conv4_3/incep/pool"
  top: "conv4_3/incep/pool_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_3/incep/pool_1x1_bn"
  type: "BatchNorm"
  bottom: "conv4_3/incep/pool_1x1"
  top: "conv4_3/incep/pool_1x1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_3/incep/pool_1x1_scale"
  type: "Scale"
  bottom: "conv4_3/incep/pool_1x1"
  top: "conv4_3/incep/pool_1x1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_3/incep/pool_1x1_relu"
  type: "ReLU"
  bottom: "conv4_3/incep/pool_1x1"
  top: "conv4_3/incep/pool_1x1"
}
layer {
  name: "conv4_3/incep"
  type: "Concat"
  bottom: "conv4_3/incep/1x1"
  bottom: "conv4_3/incep/3x3"
  bottom: "conv4_3/incep/5x5"
  bottom: "conv4_3/incep/pool_1x1"
  top: "conv4_3/incep"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv4_4/incep/1x1"
  type: "Convolution"
  bottom: "conv4_3/incep"
  top: "conv4_4/incep/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_4/incep/1x1_bn"
  type: "BatchNorm"
  bottom: "conv4_4/incep/1x1"
  top: "conv4_4/incep/1x1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_4/incep/1x1_scale"
  type: "Scale"
  bottom: "conv4_4/incep/1x1"
  top: "conv4_4/incep/1x1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_4/incep/1x1_relu"
  type: "ReLU"
  bottom: "conv4_4/incep/1x1"
  top: "conv4_4/incep/1x1"
}
layer {
  name: "conv4_4/incep/1_reduce"
  type: "Convolution"
  bottom: "conv4_3/incep"
  top: "conv4_4/incep/1_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 24
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_4/incep/1_reduce_bn"
  type: "BatchNorm"
  bottom: "conv4_4/incep/1_reduce"
  top: "conv4_4/incep/1_reduce"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_4/incep/1_reduce_scale"
  type: "Scale"
  bottom: "conv4_4/incep/1_reduce"
  top: "conv4_4/incep/1_reduce"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_4/incep/1_reduce_relu"
  type: "ReLU"
  bottom: "conv4_4/incep/1_reduce"
  top: "conv4_4/incep/1_reduce"
}
layer {
  name: "conv4_4/incep/3x3"
  type: "Convolution"
  bottom: "conv4_4/incep/1_reduce"
  top: "conv4_4/incep/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_4/incep/3x3_bn"
  type: "BatchNorm"
  bottom: "conv4_4/incep/3x3"
  top: "conv4_4/incep/3x3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_4/incep/3x3_scale"
  type: "Scale"
  bottom: "conv4_4/incep/3x3"
  top: "conv4_4/incep/3x3"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_4/incep/3x3_relu"
  type: "ReLU"
  bottom: "conv4_4/incep/3x3"
  top: "conv4_4/incep/3x3"
}
layer {
  name: "conv4_4/incep/2_reduce"
  type: "Convolution"
  bottom: "conv4_3/incep"
  top: "conv4_4/incep/2_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 24
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_4/incep/2_reduce_bn"
  type: "BatchNorm"
  bottom: "conv4_4/incep/2_reduce"
  top: "conv4_4/incep/2_reduce"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_4/incep/2_reduce_scale"
  type: "Scale"
  bottom: "conv4_4/incep/2_reduce"
  top: "conv4_4/incep/2_reduce"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_4/incep/2_reduce_relu"
  type: "ReLU"
  bottom: "conv4_4/incep/2_reduce"
  top: "conv4_4/incep/2_reduce"
}
layer {
  name: "conv4_4/incep/5x5"
  type: "Convolution"
  bottom: "conv4_4/incep/2_reduce"
  top: "conv4_4/incep/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 2
    kernel_size: 5
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_4/incep/5x5_bn"
  type: "BatchNorm"
  bottom: "conv4_4/incep/5x5"
  top: "conv4_4/incep/5x5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_4/incep/5x5_scale"
  type: "Scale"
  bottom: "conv4_4/incep/5x5"
  top: "conv4_4/incep/5x5"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_4/incep/5x5_relu"
  type: "ReLU"
  bottom: "conv4_4/incep/5x5"
  top: "conv4_4/incep/5x5"
}
layer {
  name: "conv4_4/incep/pool"
  type: "Pooling"
  bottom: "conv4_3/incep"
  top: "conv4_4/incep/pool"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "conv4_4/incep/pool_1x1"
  type: "Convolution"
  bottom: "conv4_4/incep/pool"
  top: "conv4_4/incep/pool_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv4_4/incep/pool_1x1_bn"
  type: "BatchNorm"
  bottom: "conv4_4/incep/pool_1x1"
  top: "conv4_4/incep/pool_1x1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv4_4/incep/pool_1x1_scale"
  type: "Scale"
  bottom: "conv4_4/incep/pool_1x1"
  top: "conv4_4/incep/pool_1x1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv4_4/incep/pool_1x1_relu"
  type: "ReLU"
  bottom: "conv4_4/incep/pool_1x1"
  top: "conv4_4/incep/pool_1x1"
}
layer {
  name: "conv4_4/incep"
  type: "Concat"
  bottom: "conv4_4/incep/1x1"
  bottom: "conv4_4/incep/3x3"
  bottom: "conv4_4/incep/5x5"
  bottom: "conv4_4/incep/pool_1x1"
  top: "conv4_4/incep"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "conv4_4/incep"
  top: "conv5_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv5_1_bn"
  type: "BatchNorm"
  bottom: "conv5_1"
  top: "conv5_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv5_1_scale"
  type: "Scale"
  bottom: "conv5_1"
  top: "conv5_1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv5_1_relu"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv5_2_bn"
  type: "BatchNorm"
  bottom: "conv5_2"
  top: "conv5_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv5_2_scale"
  type: "Scale"
  bottom: "conv5_2"
  top: "conv5_2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv5_2_relu"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv5_3_bn"
  type: "BatchNorm"
  bottom: "conv5_3"
  top: "conv5_3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv5_3_scale"
  type: "Scale"
  bottom: "conv5_3"
  top: "conv5_3"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv5_3_relu"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "conv5_4"
  type: "Convolution"
  bottom: "conv5_3"
  top: "conv5_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv5_4_bn"
  type: "BatchNorm"
  bottom: "conv5_4"
  top: "conv5_4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv5_4_scale"
  type: "Scale"
  bottom: "conv5_4"
  top: "conv5_4"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv5_4_relu"
  type: "ReLU"
  bottom: "conv5_4"
  top: "conv5_4"
}
layer {
  name: "conv5_5"
  type: "Convolution"
  bottom: "conv5_4"
  top: "conv5_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv5_5_bn"
  type: "BatchNorm"
  bottom: "conv5_5"
  top: "conv5_5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv5_5_scale"
  type: "Scale"
  bottom: "conv5_5"
  top: "conv5_5"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv5_5_relu"
  type: "ReLU"
  bottom: "conv5_5"
  top: "conv5_5"
}
layer {
  name: "conv6_1"
  type: "Convolution"
  bottom: "conv5_5"
  top: "conv6_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv6_1_bn"
  type: "BatchNorm"
  bottom: "conv6_1"
  top: "conv6_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv6_1_scale"
  type: "Scale"
  bottom: "conv6_1"
  top: "conv6_1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv6_1_relu"
  type: "ReLU"
  bottom: "conv6_1"
  top: "conv6_1"
}
layer {
  name: "conv6_2"
  type: "Convolution"
  bottom: "conv6_1"
  top: "conv6_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv6_2_bn"
  type: "BatchNorm"
  bottom: "conv6_2"
  top: "conv6_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv6_2_scale"
  type: "Scale"
  bottom: "conv6_2"
  top: "conv6_2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv6_2_relu"
  type: "ReLU"
  bottom: "conv6_2"
  top: "conv6_2"
}
layer {
  name: "conv6_3"
  type: "Convolution"
  bottom: "conv6_2"
  top: "conv6_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv6_3_bn"
  type: "BatchNorm"
  bottom: "conv6_3"
  top: "conv6_3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv6_3_scale"
  type: "Scale"
  bottom: "conv6_3"
  top: "conv6_3"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv6_3_relu"
  type: "ReLU"
  bottom: "conv6_3"
  top: "conv6_3"
}
layer {
  name: "conv6_4"
  type: "Convolution"
  bottom: "conv6_3"
  top: "conv6_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv6_4_bn"
  type: "BatchNorm"
  bottom: "conv6_4"
  top: "conv6_4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv6_4_scale"
  type: "Scale"
  bottom: "conv6_4"
  top: "conv6_4"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv6_4_relu"
  type: "ReLU"
  bottom: "conv6_4"
  top: "conv6_4"
}
layer {
  name: "conv6_5"
  type: "Convolution"
  bottom: "conv6_4"
  top: "conv6_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "conv6_5_bn"
  type: "BatchNorm"
  bottom: "conv6_5"
  top: "conv6_5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    eps: 0.001
  }
}
layer {
  name: "conv6_5_scale"
  type: "Scale"
  bottom: "conv6_5"
  top: "conv6_5"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1.0
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "conv6_5_relu"
  type: "ReLU"
  bottom: "conv6_5"
  top: "conv6_5"
}
layer {
  name: "conv6_5_deconv"
  type: "Deconvolution"
  bottom: "conv6_5"
  top: "conv6_5_deconv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 0
    kernel_size: 2
    group: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv5_5_1x1"
  type: "Convolution"
  bottom: "conv5_5"
  top: "conv5_5_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat5_eltadd"
  type: "Eltwise"
  bottom: "conv5_5_1x1"
  bottom: "conv6_5_deconv"
  top: "feat5_eltadd"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "feat5_eltadd_relu"
  type: "ReLU"
  bottom: "feat5_eltadd"
  top: "feat5_eltadd"
}
layer {
  name: "feat5"
  type: "Convolution"
  bottom: "feat5_eltadd"
  top: "feat5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat5_relu"
  type: "ReLU"
  bottom: "feat5"
  top: "feat5"
}
layer {
  name: "feat5_deconv"
  type: "Deconvolution"
  bottom: "feat5"
  top: "feat5_deconv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 0
    kernel_size: 2
    group: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv4_4/incep_1x1"
  type: "Convolution"
  bottom: "conv4_4/incep"
  top: "conv4_4/incep_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat4_elwadd"
  type: "Eltwise"
  bottom: "conv4_4/incep_1x1"
  bottom: "feat5_deconv"
  top: "feat4_elwadd"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "feat4_elwadd_relu"
  type: "ReLU"
  bottom: "feat4_elwadd"
  top: "feat4_elwadd"
}
layer {
  name: "feat4"
  type: "Convolution"
  bottom: "feat4_elwadd"
  top: "feat4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat4_relu"
  type: "ReLU"
  bottom: "feat4"
  top: "feat4"
}
layer {
  name: "feat4_deconv"
  type: "Deconvolution"
  bottom: "feat4"
  top: "feat4_deconv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 0
    kernel_size: 2
    group: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "conv3_1x1"
  type: "Convolution"
  bottom: "conv3"
  top: "conv3_1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat3_elwadd"
  type: "Eltwise"
  bottom: "conv3_1x1"
  bottom: "feat4_deconv"
  top: "feat3_elwadd"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "feat3_elwadd_relu"
  type: "ReLU"
  bottom: "feat3_elwadd"
  top: "feat3_elwadd"
}
layer {
  name: "feat3"
  type: "Convolution"
  bottom: "feat3_elwadd"
  top: "feat3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat3_relu"
  type: "ReLU"
  bottom: "feat3"
  top: "feat3"
}

